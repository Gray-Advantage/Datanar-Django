version: "3.9"
name: "datanar"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: ${DATANAR_DATABASE_NAME}
      POSTGRES_USER: ${DATANAR_DATABASE_USER}
      POSTGRES_PASSWORD: ${DATANAR_DATABASE_PASSWORD}
    restart: always
    volumes:
      - postgres_data_volume:/var/lib/postgresql/data

  django:
    build: .
    container_name: django
    env_file:
      - ./.env
    restart: always
    volumes:
      - django_static_volume:/datanar/static
      - django_media_volume:/datanar/media
    depends_on:
      - postgres

  nginx_production:
    image: jonasal/nginx-certbot:latest
    container_name: nginx
    environment:
      DEBUG: ${DATANAR_CERTBOT_DEBUG}
      CERTBOT_EMAIL: ${DATANAR_CERTBOT_EMAIL}
      STAGING: ${DATANAR_CERTBOT_DEBUG}
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-confs/datanar_prod.conf:/etc/nginx/user_conf.d/datanar.conf
      - django_media_volume:/datanar/media
      - django_static_volume:/datanar/static
      - nginx_certificates_volume:/etc/letsencrypt
    depends_on:
      - django
    profiles:
      - prod

  nginx_localhost:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx-confs/datanar_local.conf:/etc/nginx/conf.d/default.conf
      - ./nginx-confs/robots.txt:/datanar/static/robots.txt
      - django_media_volume:/datanar/media
      - django_static_volume:/datanar/static
    depends_on:
      - django
    profiles:
      - dev

  redis:
    image: redis:latest
    container_name: redis
    restart: always

  celery:
    build: .
    container_name: celery
    env_file:
      - ./.env
    restart: always
    command: bash -c "celery -A datanar worker"
    volumes:
      - django_media_volume:/datanar/media
    depends_on:
      - postgres
      - redis

volumes:
  django_media_volume:
  django_static_volume:
  nginx_certificates_volume:
  postgres_data_volume:
